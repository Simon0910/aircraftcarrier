package ${cfg.Import_p};

import com.aircraftcarrier.framework.excel.annotation.valid.ExcelBigDecimal;
import com.aircraftcarrier.framework.excel.annotation.valid.ExcelSize;
import com.aircraftcarrier.framework.excel.util.ExcelRow;
import com.alibaba.excel.annotation.ExcelProperty;
import com.alibaba.excel.annotation.write.style.ColumnWidth;
import io.swagger.annotations.ApiModelProperty;
import lombok.Getter;
import lombok.Setter;

import javax.validation.constraints.DecimalMax;
import javax.validation.constraints.DecimalMin;
import javax.validation.constraints.Digits;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Date;


/**
 * $!{table.comment} Import
 *
 * @author ${author}
 * @date ${date}
 * @since 1.0
 */
@Getter
@Setter
@ColumnWidth(20)
public class ${cfg.Import_n} extends ExcelRow {
    /**
     * serialVersionUID
     */
    private static final long serialVersionUID = 1L;
## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})

#if("$!field.comment" != "")
    /**
     * ${field.comment}
     */
#end
    @ApiModelProperty(value = "${field.comment}", required = true)
    #if("$!field.propertyType" == "String")
    @NotBlank(message = "${field.comment}参数不能传空")
    @Size(max = ${field.metaInfo.length}, message = "${field.comment}长度不能大于${field.metaInfo.length}")
    @ExcelSize(max = ${field.metaInfo.length})
    #elseif("$!field.propertyType" == "BigDecimal")
        #if($field.metaInfo.length > 0)
            #set($decimalLength = $field.metaInfo.length)
            #set($decimalScale = $field.metaInfo.scale)
            #set($digitsInteger = $($decimalLength - $decimalScale))
            #set($decimalMax = "")
            #foreach($i in [1..$digitsInteger])
                #set($decimalMax = "${decimalMax}9")
            #end
            #if($decimalScale > 0)
                #set($decimalMax = $decimalMax + ".")
                #foreach($i in [1..$decimalScale])
                    #set($decimalMax = "${decimalMax}9")
                #end
            #end
        #end
    @NotNull(message = "${field.comment}参数必传")
    @Digits(integer = ${digitsInteger}, fraction = ${field.metaInfo.scale}, message = "${field.comment}不符合${field.type}格式")
    @DecimalMin(value = "0", message = "${field.comment}最小不能小于0")
    @DecimalMax(value = "${decimalMax}", message = "${field.comment}最大不能大于${decimalMax}")
    @ExcelBigDecimal(min = "0", max = "${decimalMax}", integer = ${digitsInteger}, scale = ${field.metaInfo.scale})
    #else
    @NotNull(message = "${field.comment}参数必传")
    #end
    private ${field.propertyType} ${field.propertyName};
#end
## ----------  END 字段循环遍历  ----------

    /**
     * genUniqueKey
     *
     * @return uniqueKey: 需要根据实际业务定义
     */
    @Override
    public String genUniqueKey() {
        return rowNo + "-" + rowNo;
    }
}